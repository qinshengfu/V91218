<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Sys_configMapper">
	
	<!--表名 -->
	<sql id="tableName">
		"FT_SYS_CONFIG"
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		"GMT_CREATE",
		"GMT_MODIFIED",	
		"COMMUNITY_AWARD",	
		"BONUS_AWARD",	
		"PROMOTE",	
		"OUT_NUMBER_SAME_MONTH",	
		"STATE_SELL",	
		"CASH_TIME",	
		"MIN_XMC_NUMBER",	
		"MAX_XMC_NUMBER",	
		"LATEST_PRICE",	
		"DAY_LIMIT",
		"LEVEL_CHARGE",
		"VALIDITY_VOUCHER",	
		"USDT_WALLET_ADDRESS",
		"USDT_WALLET_PIC",
		"OUT_CHARGE",
		"XMC_COST",
		"TIME_INTERVAL",
		"TASK_TIME",
		"USDT_MIN",
		"USDT_MAX",
		"USDT_MUITIPLE",
		"USDT_MAX_DAY",
		"XMC_MIN",
		"XMC_CHARGE",
		"LEVEL_BONUS",
		"DAY_BONUS",
		"BB_SERVICE_CHARGE",
		"GLOBAL_DAY_BONUS",
		"SYS_CONFIG_ID"
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
			#{GMT_CREATE},	
			#{GMT_MODIFIED},	
			#{COMMUNITY_AWARD},	
			#{BONUS_AWARD},	
			#{PROMOTE},	
			#{OUT_NUMBER_SAME_MONTH},	
			#{STATE_SELL},	
			#{CASH_TIME},	
			#{MIN_XMC_NUMBER},	
			#{MAX_XMC_NUMBER},	
			#{LATEST_PRICE},	
			#{DAY_LIMIT},
			#{LEVEL_CHARGE},
			#{VALIDITY_VOUCHER},	
			#{USDT_WALLET_ADDRESS},
			#{USDT_WALLET_PIC},
			#{OUT_CHARGE},
			#{XMC_COST},
			#{TIME_INTERVAL},
			#{TASK_TIME},
			#{USDT_MIN},
			#{USDT_MAX},
			#{USDT_MUITIPLE},
			#{USDT_MAX_DAY},
			#{XMC_MIN},
			#{XMC_CHARGE},
			#{LEVEL_BONUS},
			#{DAY_BONUS},
			#{BB_SERVICE_CHARGE},
			#{GLOBAL_DAY_BONUS},
			#{SYS_CONFIG_ID}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into
		<include refid="tableName"></include>
		(
		<include refid="Field"></include>
		) values (
		<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 清空前台所有表-->
	<delete id="deleteAllTable" parameterType="String">
		delete from
		${_parameter}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"/>
			set 
				<foreach collection="_parameter.keys" item="item" separator="," close="">
					${item} = #{[${item}]}
				</foreach>
			where 
				"SYS_CONFIG_ID" = '1'
	</update>

	<!-- 重置序列 -->
	<select id="reset_seq" parameterType="pd" statementType="CALLABLE">
		<!--调用存储过程有专门的标签statementType="CALLABLE" 用{}括起来-->
		{
		call RESET_SEQ(#{seqName},#{seqStart})
		}
	</select>

	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"/>
		from 
		<include refid="tableName"/>
		where 
			"SYS_CONFIG_ID" = '1'
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				-->
				)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			"SYS_CONFIG_ID" in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- fh313596790qq(青苔) -->
</mapper>